// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum UserRole {
  MEMBER
  ADMIN
}

model User {
  id                      String    @id @default(uuid())
  avatarLocalPath         String    @default("")
  avatarUrl               String    @default("https://via.placeholder.com/200x200.png")
  email                   String    @unique
  emailVerificationExpiry DateTime?
  emailVerificationToken  String?
  forgotPasswordExpiry    DateTime?
  forgotPasswordToken     String?
  fullname                String?
  isEmailVerified         Boolean   @default(false)
  password                String
  refreshToken            String?
  role                    UserRole  @default(MEMBER)
  username                String    @unique
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  problems                Problem[]
}

model Problem {
  id                 String     @id @default(uuid())
  title              String
  description        String
  difficulty         Difficulty
  tags               String[]
  userId             String
  examples           Json
  constraints        String
  hints              String?
  editorial          String?
  testcases          Json
  codeSnippets       Json
  referenceSolution Json
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  user               User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}
